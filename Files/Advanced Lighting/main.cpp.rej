diff a/Files/Advanced Lighting/main.cpp b/Files/Advanced Lighting/main.cpp	(rejected hunks)
@@ -308,24 +308,25 @@
 #if test == 4
 void RenderScene(ShaderReader &shader) {
   glm::mat4 modelMat;
-  glUniformMatrix4fv(ligthModelMatLoc, 1, GL_FALSE, glm::value_ptr(modelMat));
+  GLuint modelMatLoc = glGetUniformLocation(shader.GetProgram(), "modelMat");
+  glUniformMatrix4fv(modelMatLoc, 1, GL_FALSE, glm::value_ptr(modelMat));
   glBindVertexArray(planeVAO);
   glDrawArrays(GL_TRIANGLES, 0, 6);
   glBindVertexArray(0);
 
   modelMat = glm::mat4();
   modelMat = glm::translate(modelMat, glm::vec3(0.0f, 1.5f, 0.0f));
-  glUniformMatrix4fv(ligthModelMatLoc, 1, GL_FALSE, glm::value_ptr(modelMat));
+  glUniformMatrix4fv(modelMatLoc, 1, GL_FALSE, glm::value_ptr(modelMat));
   RenderCube();
   modelMat = glm::mat4();
   modelMat = glm::translate(modelMat, glm::vec3(2.0f, 0.0f, 1.0f));
-  glUniformMatrix4fv(ligthModelMatLoc, 1, GL_FALSE, glm::value_ptr(modelMat));
+  glUniformMatrix4fv(modelMatLoc, 1, GL_FALSE, glm::value_ptr(modelMat));
   RenderCube();
   modelMat = glm::mat4();
   modelMat = glm::translate(modelMat, glm::vec3(-1.0f, 0.0f, 2.0f));
   modelMat = glm::rotate(modelMat, glm::radians(60.0f), glm::normalize(glm::vec3(1.0f, 0.0f, 1.0f)));
   modelMat = glm::scale(modelMat, glm::vec3(0.5f));
-  glUniformMatrix4fv(ligthModelMatLoc, 1, GL_FALSE, glm::value_ptr(modelMat));
+  glUniformMatrix4fv(modelMatLoc, 1, GL_FALSE, glm::value_ptr(modelMat));
   RenderCube();
 }
 
